x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.25^2)*(1 - x^2/(7.5^2))))
par(bg = '#4a6ea8')
plot(-10:10,rnorm(21,5,2), pch=16, col = 'white', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.25^2)*(1 - x^2/(7.5^2))))
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.25^2)*(1 - x^2/(7.5^2))), col = '#dce0dd', border=NA)
plot(-10:10,rnorm(21,5,2), pch=16, col = 'white', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
lines(x, -12 - sqrt((8.25^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 - sqrt((8.25^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
lines(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border=NA)
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, sqrt(25 - x^2), col = '#dce0dd', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
#cerchio interno
r = 3
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
plot(-10:10,rnorm(21,5,2), pch=16, col = 'white', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
#cerchio interno
r = 3
x <- seq(-r,r,l=1000)
polygon(x, -12 -sqrt(r^2 - x^2), col = '#9e9d9d', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, sqrt(25 - x^2), col = '#dce0dd', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
par(bg = '#4a6ea8')
plot(-10:10,rnorm(21,5,2), pch=16, col = 'white', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
#cerchio interno
r = 3
x <- seq(-r,r,l=1000)
polygon(x, -12 +sqrt(r^2 - x^2), col = '#aba9a9', border=NA)
polygon(x, -12 -sqrt(r^2 - x^2), col = '#9e9d9d', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, sqrt(25 - x^2), col = '#dce0dd', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
plot(-10:10,rnorm(21,5,2), pch=16, col = '#d18299', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
#cerchio interno
r = 3
x <- seq(-r,r,l=1000)
polygon(x, -12 +sqrt(r^2 - x^2), col = '#aba9a9', border=NA)
polygon(x, -12 -sqrt(r^2 - x^2), col = '#9e9d9d', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, sqrt(25 - x^2), col = '#dce0dd', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
#caffe
r = 4
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -5 + sqrt(r^2 - x^2))
lines(x, -4 + sqrt(r^2 - x^2))
lines(x, -4 -sqrt(r^2 - x^2))
plot(-10:10,rnorm(21,5,2), pch=16, col = '#d18299', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
#cerchio interno
r = 3
x <- seq(-r,r,l=1000)
polygon(x, -12 +sqrt(r^2 - x^2), col = '#aba9a9', border=NA)
polygon(x, -12 -sqrt(r^2 - x^2), col = '#9e9d9d', border=NA)
#caffe
r = 4
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -4 -sqrt(r^2 - x^2), col = '#542a0e', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, sqrt(25 - x^2), col = '#dce0dd', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -4 -sqrt(r^2 - x^2), col = '#542a0e', border=NA)
# concavita
x <- seq(-5,5,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -4 + sqrt(r^2 - x^2), col = '#542a0e', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -4 + sqrt(r^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
plot(-10:10,rnorm(21,5,2), pch=16, col = '#d18299', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
#cerchio interno
r = 3
x <- seq(-r,r,l=1000)
polygon(x, -12 +sqrt(r^2 - x^2), col = '#aba9a9', border=NA)
polygon(x, -12 -sqrt(r^2 - x^2), col = '#9e9d9d', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, sqrt(25 - x^2), col = '#dce0dd', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
#caffe
r = 4
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -4 + sqrt(r^2 - x^2), col = '#542a0e', border=NA)
x <- c(1:9, 8:1)
y <- c(1, 2*(5:3), 2, -1, 17, 9, 8, 2:9)
polygon(x, y, xpd = xpd, col = "orange", lty = 2, lwd = 2, border = "red")
polygon(x, y,col = "orange", lty = 2, lwd = 2, border = "red")
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(c(x,x), c(-4 + sqrt(r^2 - x^2),-1), col = '#542a0e', border=NA)
seq(-1,-1,l=5)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(c(x,x), c(-4 + sqrt(r^2 - x^2),seq(-1,-1,l=1000)), col = '#542a0e', border=NA)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(c(x,x), c(seq(-1,-1,l=1000),-4 + sqrt(r^2 - x^2)), col = '#542a0e', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
#caffe
r = 4
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(c(x,x), c(seq(-1,-1,l=1000),-4 + sqrt(r^2 - x^2)), col = '#542a0e', border=NA)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
#caffe
r = 4
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
#caffe
r = 4
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(c(x,x), c(seq(-1,-1,l=1000),-4 + sqrt(r^2 - x^2)), col = '#542a0e', border=NA)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
#caffe
r = 4
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
plot(-10:10,rnorm(21,5,2), pch=16, col = '#d18299', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
#cerchio interno
r = 3
x <- seq(-r,r,l=1000)
polygon(x, -12 +sqrt(r^2 - x^2), col = '#aba9a9', border=NA)
polygon(x, -12 -sqrt(r^2 - x^2), col = '#9e9d9d', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, sqrt(25 - x^2), col = '#dce0dd', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
#caffe
r = 4
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x,-2 + sqrt(r^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -1 + sqrt(r^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -3 + sqrt(r^2 - x^2), col = '#542a0e', border=NA)
#caffe
r = 2
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -3 + sqrt(r^2 - x^2), col = '#542a0e', border=NA)
plot(-10:10,rnorm(21,5,2), pch=16, col = '#d18299', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
#cerchio interno
r = 3
x <- seq(-r,r,l=1000)
polygon(x, -12 +sqrt(r^2 - x^2), col = '#aba9a9', border=NA)
polygon(x, -12 -sqrt(r^2 - x^2), col = '#9e9d9d', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, sqrt(25 - x^2), col = '#dce0dd', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
#caffe
r = 2
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -3 + sqrt(r^2 - x^2), col = '#542a0e', border=NA)
#caffe
r = 4
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -3 + sqrt(r^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
#caffe
r = 4
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -1 + sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -2 + sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -3 + sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -4 + sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -.2 + sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -4.2 + sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
plot(-10:10,rnorm(21,5,2), pch=16, col = '#d18299', ylim=c(-20,20))
points(-10:10,rnorm(21,5,2), pch=16, col = '#e0be8d')
# piatto
r = 7.5
x <- seq(-r,r,l=1000)
lines(x, -12 + sqrt(r^2 - x^2))
lines(x, -12 -sqrt(r^2 - x^2))
lines(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))))
polygon(x, -12 + sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
polygon(x, -12 - sqrt((8.5^2)*(1 - x^2/(7.5^2))), col = '#b5b2b1', border=NA)
polygon(x,  -12 -sqrt(r^2 - x^2), col = '#dce0dd', border=NA)
#cerchio interno
r = 3
x <- seq(-r,r,l=1000)
polygon(x, -12 +sqrt(r^2 - x^2), col = '#aba9a9', border=NA)
polygon(x, -12 -sqrt(r^2 - x^2), col = '#9e9d9d', border=NA)
# concavita
x <- seq(-5,5,l=1000)
polygon(x, -sqrt(196*(1 - x^2/25)), col = '#dce0dd', border='#b5b2b1')
# bordo superiore
x <- seq(-5,5,l=1000)
polygon(x, sqrt(25 - x^2), col = '#dce0dd', border=NA)
polygon(x, -sqrt(25 - x^2), col = '#dce0dd', border=NA)
#interno
x <- seq(-4.5,4.5,l=1000)
polygon(x, sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
polygon(x, -sqrt((4.5)^2 - x^2), col = '#c5c7c5', border=NA)
#caffe
r = 4
x <- seq(-r,r,l=1000)
#lines(x, -4 + sqrt(r^2 - x^2))
polygon(x, -sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
polygon(x, -4.2 + sqrt((4.5)^2 - x^2), col = '#542a0e', border=NA)
qchisq(.95,6)
anova(glm.1, glm.2)
library(ggplot2)
#plot lstat against medv
data("Boston", package = "MASS")
ggplot(Boston, aes(lstat, medv) ) +
geom_point()
fit <- lm(medv ~ lstat, data = Boston)
par(mfrow=c(2,2))
plot(fit)
# polynomial fit (example) - using a 2 degree polynomial
fit.poly <- lm(medv ~ lstat + I(lstat^2), data = Boston)
# same as
fit.poly2 <- lm(medv ~ poly(lstat, degree = 2, raw = TRUE), data = Boston)
summary(fit.poly2)
summary(fit.poly)
# 5 degrees polynomial
fit.poly5 <- lm(medv ~ poly(lstat, 5), data = Boston)
ggplot(Boston, aes(lstat, medv) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 5, raw = TRUE))
library(splines)
knots <- quantile(Boston$lstat)[2:4]
#default degree of spline is 3
fit.spline <- lm (medv ~ bs(lstat, knots = knots), data = Boston)
summary(fit.spline)
# we get the same result by using:
# here we are not using knots but we are asking for 6 degrees of freedom
# then three knots are automatically created
fit.spline <- lm (medv ~ bs(lstat, df = 6), data = Boston)
summary(fit.spline)
#plot wat we obtain by using splines
ggplot(Boston, aes(lstat, medv) ) +
geom_point() +
stat_smooth(method = lm, formula = y ~ poly(x, 3, raw = TRUE))+
# stat_smooth(method = lm, formula = y ~ splines::bs(x, df = 3), col="purple")+ # same of previous polynomial using splines
stat_smooth(method = lm, formula = y ~ splines::bs(x, df = 6), col="red")+
stat_smooth(method = lm, formula = y ~ splines::bs(x, df = 100), col="green")
ggplot(Boston, aes(lstat, medv) ) +
geom_point() +
# default one uses 3 degrees of freedom
stat_smooth(method = lm, formula = y ~ splines::bs(x, knots = median(Boston$lstat)), col="blue")+
stat_smooth(method = lm, formula = y ~ splines::bs(x, knots = median(Boston$lstat),
degree=2),col="red")+
stat_smooth(method = lm, formula = y ~ splines::bs(x, knots = median(Boston$lstat),
degree=1),col="green")+
geom_vline(xintercept = median(Boston$lstat), lty="dashed")
median(Boston$lstat)
# As an example, consider the simple dataset trees, where we have measurements
# of the girth, height and volume of timber in 31 felled black cherry trees.
# Note that girth is the diameter of the tree (in inches) measured at 4 ft 6
# in above the ground. First of all, we use the pairs plot for checking possible
# correlations between the three variables.
library("mgcv")
head(trees)
pairs(trees)
glm.1 <- glm(Volume ~ Height, family = Gamma(link=log), data=trees)
gam.1 <- gam(Volume ~ s(Height), family=Gamma(link=log), data=trees)
summary(gam.1)
layout(1)
plot(trees$Height, trees$Volume, xlab="Height", ylab="Fitted values")
points(trees$Height, glm.1$fitted.values, col="blue", bg=3, pch=19)
points(trees$Height, gam.1$fitted.values, col="red", bg=2, pch=19, cex=.5)
legend("topright", c("GLM","GAM"), pch=19, col=c("blue", "red"))
plot(gam.1,residuals=TRUE,pch=19)
glm.2<-glm(Volume ~ Girth + Height, family = Gamma(link=log), data=trees)
gam.2 <- gam(Volume ~ s(Height) + s(Girth), family=Gamma(link=log), data=trees)
summary(gam.2)
anova(glm.1, glm.2)
qchisq(.95,1)
qchisq(.95,6)
anova(glm.1, glm.2, test="Chisq")
anova(glm.1)
nrows(trees)
nrow(trees)
anova(glm.1, glm.2)
# Read results obtained for section 1, part 1
setwd("~/DSSC/hpc_assignment1/section1/ring")
times <- data.frame(read.csv("results.csv"))
colnames(times) <- c("n_procs", "time_nonblocking", "time_blocking")
library("ggplot2")
x <- as.numeric(times$n_procs)
y <- as.numeric(times$time_nonblocking)
png("ring_results.png", width=1200, height = 800)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*(2*2*(10^(-6))/12000 + 0.68*(10^(-6)))
y2 <- x[25:47]*(2*2*(10^(-6))/12200 + 1.23*(10^(-6)))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
# Read results obtained for section 1, part 1
setwd("~/DSSC/hpc_assignment1/section1/ring")
times <- data.frame(read.csv("results.csv"))
colnames(times) <- c("n_procs", "time_nonblocking", "time_blocking")
library("ggplot2")
x <- as.numeric(times$n_procs)
y <- as.numeric(times$time_nonblocking)
png("ring_results.png", width=1200, height = 800)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*(2*2*(10^(-6))/12000 + 0.68*(10^(-6)))
