# equation for straight line y = 5.48 + (-0.29)*x
curve( alpha + (beta)*x, col=2, lwd=2, add=T)
# compute sum of square residuals
sum <- 0
for (i in 1:length(df$Temp)) {
segments(df[,2][i],df[,3][i], df[,2][i], (alpha +(beta)*(df[,2][i])), col=3, lty="dashed")
sum <- sum + (df[,3][i] - (alpha +(beta)*(df[,2][i])))^2
}
tot_ss <- 0
res_ss <- 0
reg_ss <- 0
for (i in 1:length(df$Temp)) {
y <- df[,3][i]
y_hat <- (alpha +(beta)*(df[,2][i]))
y_bar <- mean(df[,3])
tot_ss <- tot_ss  + (y - y_bar)^2
res_ss <- res_ss + (y - y_hat)^2
reg_ss <- reg_ss + (y_hat - y_bar)^2
}
tot_ss
reg_ss
R_2 <- reg_ss/tot_ss
R_2
(R_2)^2/(1-R_2^2)
((R_2)^2/(1-R_2^2))*(2/53)
var.test(lm(Gas ~ Temp, df))
var.test(lm(Gas ~ Temp, df))
var.test(df$Gas, df$Temp)
((R_2)/(1-R_2))*(2/53)
((R_2)/(1-R_2))
0.18041/((R_2)/(1-R_2))
R_2
# adijust R squared is:
n <- 56
p <- 2
adj_r2 <- ((reg_ss)/(n-p))/(tot_ss/(n-1))
adj_r2
(adj_r2/(1-adj_r2))
(adj_r2/(1-adj_r2))*(2/53)
(adj_r2/(1-adj_r2))*(53/2)
((R_2)/(1-R_2))*(53/2)
47.28/((R_2)/(1-R_2))
53.99/2
1/26.99
((R_2)/(1-R_2))*(54/2)
((R_2)/(1-R_2))
((R_2)/2)
((R_2)*2)
((R_2)*2)/(1-R_2)
R_2
1-R_2
0.46/0.53
(0.46/0.53)*2
(0.46/0.53)*2/53
#################################################
# Laboratory 4 - 24/11/2021: Linear Regression ~#
#################################################
# load the library DAAG with the dataset nihills
library(DAAG)
nihills
n <- nrow(nihills)
str(nihills)
# scatterplot: dist (x) against time (y)
plot(nihills$dist, nihills$time, pch=19, xlab="distance", ylab="time")
# scatterplot: dist (x) against time (y)
plot(nihills$dist, nihills$timef, pch=19, xlab="distance", ylab="time")
# Alternatively
with(nihills, plot(dist, time, pch=19))
help(with)
# Fit the linear model 1: time = beta_0+beta_1*dist + epsilon
lm1 <- lm(time ~ dist, data=nihills)
summary(lm1)
# plot of the residuals
par(mfrow=c(2,2))
plot(lm1)
# Plot of the fitted values
par(mfrow=c(1,1))
with(nihills, plot(dist, time, pch=19))
abline(coef(lm1), col="red", lty="solid")
# same as
curve( -0.32530 + 0.20094*x, add=T, col = 3)
# same as
curve( -0.32530 + 0.20094*x, add=T, col = 3,lty="solid")
# or
curve(predict(lm1, data.frame(dist=x)), col="blue", lty="solid", lwd=2, add=TRUE)
text(13,3,expression(time==hat(beta)[0]+hat(beta)[1]*dist), col="red")
text(13,3,expression(time==hat(beta)[0]+hat(beta)[1]*dist))
points(nihills$dist, predict(lm1), col="red", pch=19, cex=0.8)
nihills[17,]
segments(nihills[17,]$dist,nihills[17,]$time,
nihills[17,]$dist,fitted(lm1)[17], lty="dashed")
# R_sq
Tot_SS <- with(nihills, sum((time-mean(time))^2))
Res_SS <- with(nihills, sum((predict(lm1)-time)^2))
Mod_SS <- with(nihills, sum((predict(lm1)-mean(time))^2))
R_sq <- 1-Res_SS/Tot_SS
Mod_SS/Tot_SS
with(nihills, cor(time, dist))^2
with(nihills, cor(time, dist))^2
library(PerformanceAnalytics)
library(PerformanceAnalytics)
chart.Correlation(nihills[,c("dist", "climb", "time")])
# Read results obtained by ring.c
setwd("~/DSSC/hpc_assignment1/section1/ring")
times <- data.frame(read.table("results.csv"))
times <- times[-1,]
colnames(times) <- c("n_procs", "time_nonblocking", "time_blocking")
library("ggplot2")
x <- as.numeric(times$n_procs)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- x[1:24]*2.5*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <-  x[25:47]*2.5*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5, 6), lty=c(1,2,1,2), lwd=2, cex=0.8)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=0.8)
x <- as.numeric(times$n_procs)
png("ring_results.png")
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- x[1:24]*2.5*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <-  x[25:47]*2.5*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=0.8)
#close the png file
dev.off()
png("ring_results.png", width=1000, hegight = 480)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
png("ring_results.png", width=1000, height = 480)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- x[1:24]*2.5*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <-  x[25:47]*2.5*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=0.8)
#close the png file
dev.off()
png("ring_results.png", width=1000, height = 600)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- x[1:24]*2.5*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <-  x[25:47]*2.5*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=0.8)
#close the png file
dev.off()
png("ring_results.png", width=1000, height = 800)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- x[1:24]*2.5*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <-  x[25:47]*2.5*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=0.8)
#close the png file
dev.off()
png("ring_results.png", width=1200, height = 800)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- x[1:24]*2.5*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <-  x[25:47]*2.5*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=0.8)
#close the png file
dev.off()
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,3,1,2), lwd=2, cex=0.8)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=0.8)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- x[1:24]*2.5*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <-  x[25:47]*2.5*16*10^(-3)/12200 + 1.23*(10^(-6))
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- y1 + x[1:24]*0.5*16*10^(-3)/19900
y2 <- y2 + x[25:47]*0.5*16*10^(-3)/12200
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=0.8)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1.3, pch=1, pt.cex = 1)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1.3, pt.cex = 1)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1.2, pt.cex = 1)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1.2, pt.cex = 0.8)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1, pt.cex = 0.8)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- y1 + x[1:24]*0.5*16*10^(-3)/19900
y2 <- y2 + x[25:47]*0.5*16*10^(-3)/12200
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1, pt.cex = 0.8)
windows(height = 7, width = 3.5)
windows(height = 800, width = 1200)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
legend(1, 0.00012, legend=c("Non blocking implementation", "Blocking implementation"),
col=c(5, 6), lty=1, lwd=2, cex=0.8)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- y1 + x[1:24]*0.5*16*10^(-3)/19900
y2 <- y2 + x[25:47]*0.5*16*10^(-3)/12200
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1, pt.cex = 0.8)
windows(height = 800, width = 1200)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- y1 + x[1:24]*0.5*16*10^(-3)/19900
y2 <- y2 + x[25:47]*0.5*16*10^(-3)/12200
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1, pt.cex = 0.8)
png("ring_results.png", width=1200, height = 800)
windows(height = 800, width = 1200)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- y1 + x[1:24]*0.5*16*10^(-3)/19900
y2 <- y2 + x[25:47]*0.5*16*10^(-3)/12200
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1, pt.cex = 0.8)
#close the png file
dev.off()
help("legend")
png("ring_results.png", width=1200, height = 800)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- y1 + x[1:24]*0.5*16*10^(-3)/19900
y2 <- y2 + x[25:47]*0.5*16*10^(-3)/12200
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1, pt.cex = 0.8)
#close the png file
dev.off()
png("ring_results.png", width=1200, height = 800)
#plot times for non blocking implementation
plot(x, times$time_nonblocking, type='l', xlab="N procs", ylab="Time", col=5, lwd=2, ylim=c(0,1.5*10^(-4)))
points(x, times$time_nonblocking,pch=16,col=5)
#plot times for blocking implementation
lines(x, times$time_blocking, type='l', xlab="N procs", ylab="Time", col=6, lwd=2)
points(x, times$time_blocking,pch=16,col=6)
abline(v = 24, lty = 2, lwd=1.5)
text(22, 0.0, "n_procs=24", pos = 4, srt=90)
#plot theoretical model for non blocking implementation
y1 <- x[1:24]*2*16*10^(-3)/19900 + 0.68*(10^(-6))
y2 <- x[25:47]*2*16*10^(-3)/12200 + 1.23*(10^(-6))
lines(x, c(y1,y2), type='l', col="#0f95a6", lty = 2,lwd=2)
#plot theoretical model for blocking implementation
y1 <- y1 + x[1:24]*0.5*16*10^(-3)/19900
y2 <- y2 + x[25:47]*0.5*16*10^(-3)/12200
lines(x, c(y1,y2), type='l', col="#a30f94", lty = 2,lwd=2)
legend(1, 0.00012, legend=c("Non blocking implementation", "nb model", "Blocking implementation", "nb. model"),
col=c(5,5,6,6), lty=c(1,2,1,2), lwd=2, cex=1.1, pt.cex = 0.8)
#close the png file
dev.off()
# read csv assignment 1,section 1, part 2
library(ggplot2)
library(gridExtra)
library(grid)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
# read csv assignment 1,section 1, part 2
library(ggplot2)
library(gridExtra)
library(grid)
setwd("~/DSSC/hpc_assignment1/section1/matrix")
#cpu
times <- data.frame(read.csv("3D_matrix.csv"))
#times to sum matrices
times <- data.frame(read.csv("3D_matrix.csv"))
#set table theme
color_df <- data.frame(color = c("#ffffff", "#bfdedd"), stringsAsFactors = FALSE)
my_table_theme <- ttheme_default(core=list(bg_params = list(fill = color_df$color[1:2], col=NA)), colhead =list(bg_params=list(fill ="#8bb0af")))
times
setwd("~/DSSC/hpc_assignment1/section1/matrix")
#set table theme
color_df <- data.frame(color = c("#ffffff", "#bfdedd"), stringsAsFactors = FALSE)
my_table_theme <- ttheme_default(core=list(bg_params = list(fill = color_df$color[1:2], col=NA)), colhead =list(bg_params=list(fill ="#8bb0af")))
grid.table(jacobi, rows=NULL, theme = my_table_theme)
#times to sum matrices
times <- data.frame(read.csv("3D_matrix.csv"))
times
# read csv assignment 1,section 1, part 2
library(ggplot2)
library(gridExtra)
library(grid)
setwd("~/DSSC/hpc_assignment1/section1/matrix")
#set table theme
color_df <- data.frame(color = c("#ffffff", "#bfdedd"), stringsAsFactors = FALSE)
my_table_theme <- ttheme_default(core=list(bg_params = list(fill = color_df$color[1:2], col=NA)), colhead =list(bg_params=list(fill ="#8bb0af")))
grid.table(jacobi, rows=NULL, theme = my_table_theme)
#times to sum matrices
times <- data.frame(read.csv("3D_matrix.csv"))
grid.table(times, rows=NULL)
grid.table(times, rows=NULL, theme = my_table_theme)
grid.table(times, rows=NULL, theme = my_table_theme)
#set table theme
color_df <- data.frame(color = c("#ffffff", "#bfdedd"), stringsAsFactors = FALSE)
my_table_theme <- ttheme_default(core=list(bg_params = list(fill = color_df$color[1:2], col=NA)), colhead =list(bg_params=list(fill ="#8bb0af")))
#times to sum matrices
times <- data.frame(read.csv("3D_matrix.csv"))
grid.table(times, rows=NULL, theme = my_table_theme)
plot()
window()
window(800,800)
grid.table(jacobi, rows=NULL, theme = my_table_theme)
library(grid)
setwd("~/DSSC/hpc_assignment1/section3")
color_df <- data.frame(color = c("#ffffff", "#bfdedd"), stringsAsFactors = FALSE)
my_table_theme <- ttheme_default(core=list(bg_params = list(fill = color_df$color[1:2], col=NA)), colhead =list(bg_params=list(fill ="#8bb0af")))
#cpu
jacobi <- data.frame(read.csv("results.csv"))
jacobi$min_commtime <- jacobi$mintime - jacobi$jacobimin
jacobi$max_commtime <- jacobi$maxtime - jacobi$jacobimax
grid.table(jacobi, rows=NULL, theme = my_table_theme)
# read csv assignment 1 section 3
library(ggplot2)
library(gridExtra)
library(grid)
setwd("~/DSSC/hpc_assignment1/section3")
color_df <- data.frame(color = c("#ffffff", "#bfdedd"), stringsAsFactors = FALSE)
my_table_theme <- ttheme_default(core=list(bg_params = list(fill = color_df$color[1:2], col=NA)), colhead =list(bg_params=list(fill ="#8bb0af")))
#cpu
jacobi <- data.frame(read.csv("results.csv"))
jacobi$min_commtime <- jacobi$mintime - jacobi$jacobimin
jacobi$max_commtime <- jacobi$maxtime - jacobi$jacobimax
grid.table(jacobi, rows=NULL, theme = my_table_theme)
plot()
plot
plot(x,y)
plot(1,2)
